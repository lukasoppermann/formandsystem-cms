{"version":3,"sources":["sortable-elements.js"],"names":["root","factory","define","amd","exports","module","sortable","this","dragging","draggingHeight","draggingWidth","matches","placeholders","sortables","_data","element","key","value","undefined","h5s","data","_removeData","window","Element","prototype","_filter","nodes","wanted","Array","slice","call","result","i","length","push","indexOf","_on","event","callback","addEventListener","events","_off","removeEventListener","_attr","attribute","setAttribute","_removeAttr","removeAttribute","_offset","rect","getClientRects","left","scrollX","top","scrollY","_removeItemEvents","items","_removeSortableEvents","_attachGhost","ghost","dataTransfer","effectAllowed","setData","setDragImage","draggedItem","x","y","_addGhostPos","parseInt","pageX","pageY","_getGhost","_removeSortableData","_removeItemData","_listsConnected","curList","destList","_getHandles","handle","handles","querySelectorAll","concat","_destroySortable","sortableElement","opts","children","_enableSortable","spanEl","document","createElement","dragDrop","disableIEFix","parent","parentElement","_disableSortable","_setIndex","forEach","item","index","_reloadSortable","_index","_attached","parentNode","_html2element","html","div","innerHTML","firstChild","_before","target","insertBefore","_after","nextElementSibling","_detach","removeChild","_makeEvent","name","detail","e","createEvent","initEvent","_dispatchEventOnConnected","dispatchEvent","sortableElements","options","method","String","connectWith","placeholder","dragImage","placeholderClass","draggingClass","hoverClass","option","test","startParent","tagName","classList","add","apply","split","getAttribute","id","remove","stopImmediatePropagation","console","log","getComputedStyle","height","width","startparent","newParent","style","display","oldDisplay","startParentItems","endParentItems","oldIndex","position","oldPosition","map","currentIndex","hasChanged","endParent","visiblePlaceholder","preventDefault","stopPropagation","filter","onDragOverEnter","dropEffect","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","deadZone","offsetTop","appendChild","destroy","enable","disable"],"mappings":"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","file":"sortable-elements.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.sortable = factory();\n  }\n}(this, function() { // jshint ignore:line\n/*\n * Sortable Elements\n * https://github.com/lukasoppermann/sortable-elements\n *\n * This version is mantained by Lukas Oppermann <lukas@vea.re>\n *\n * Released under the MIT license.\n */\n'use strict';\n/*\n * variables global to the plugin\n */\nvar dragging;\nvar draggingHeight;\nvar draggingWidth;\nvar placeholders = [];\nvar sortables = [];\n/**\n * Get or set data on element\n * @param {Element} element\n * @param {string} key\n * @param {*} value\n * @return {*}\n */\nvar _data = function(element, key, value) {\n  if (value === undefined) {\n    return element && element.h5s && element.h5s.data && element.h5s.data[key];\n  } else {\n    element.h5s = element.h5s || {};\n    element.h5s.data = element.h5s.data || {};\n    element.h5s.data[key] = value;\n  }\n};\n/**\n * Remove data from element\n * @param {Element} element\n */\nvar _removeData = function(element) {\n  if (element.h5s) {\n    delete element.h5s.data;\n  }\n};\n/**\n * Cross-browser shortcut for actual `Element.matches` method,\n * which has vendor prefix in IE & Edge\n */\nvar matches;\nswitch (true) {\n  case 'matches' in window.Element.prototype:\n    matches = 'matches';\n    break;\n  case 'msMatchesSelector' in window.Element.prototype:\n    matches = 'msMatchesSelector';\n    break;\n  // TODO: remove webkit if ever ms can be removed\n  case 'webkitMatchesSelector' in window.Element.prototype:\n    matches = 'webkitMatchesSelector';\n    break;\n}\n/**\n * Filter only wanted nodes\n * @param {Array|NodeList} nodes\n * @param {Array/string} wanted\n * @returns {Array}\n */\nvar _filter = function(nodes, wanted) {\n  if (!wanted) {\n    return Array.prototype.slice.call(nodes);\n  }\n  var result = [];\n  for (var i = 0; i < nodes.length; ++i) {\n    if (typeof wanted === 'string' && nodes[i][matches](wanted)) {\n      result.push(nodes[i]);\n    }\n    if (wanted.indexOf(nodes[i]) !== -1) {\n      result.push(nodes[i]);\n    }\n  }\n  return result;\n};\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n * @param {Function} callback\n */\nvar _on = function(element, event, callback) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _on(element[i], event, callback);\n    }\n    return;\n  }\n  element.addEventListener(event, callback);\n  element.h5s = element.h5s || {};\n  element.h5s.events = element.h5s.events || {};\n  element.h5s.events[event] = callback;\n};\n/**\n * @param {Array|Element} element\n * @param {Array|string} event\n */\nvar _off = function(element, event) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _off(element[i], event);\n    }\n    return;\n  }\n  if (element.h5s && element.h5s.events && element.h5s.events[event]) {\n    element.removeEventListener(event, element.h5s.events[event]);\n    delete element.h5s.events[event];\n  }\n};\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n * @param {*} value\n */\nvar _attr = function(element, attribute, value) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _attr(element[i], attribute, value);\n    }\n    return;\n  }\n  element.setAttribute(attribute, value);\n};\n/**\n * @param {Array|Element} element\n * @param {string} attribute\n */\nvar _removeAttr = function(element, attribute) {\n  if (element instanceof Array) {\n    for (var i = 0; i < element.length; ++i) {\n      _removeAttr(element[i], attribute);\n    }\n    return;\n  }\n  element.removeAttribute(attribute);\n};\n/**\n * @param {Element} element\n * @returns {{left: *, top: *}}\n */\nvar _offset = function(element) {\n  var rect = element.getClientRects()[0];\n  return {\n    left: rect.left + window.scrollX,\n    top: rect.top + window.scrollY\n  };\n};\n/*\n * remove event handlers from items\n * @param {Array|NodeList} items\n */\nvar _removeItemEvents = function(items) {\n  _off(items, 'dragstart');\n  _off(items, 'dragend');\n  _off(items, 'selectstart');\n  _off(items, 'dragover');\n  _off(items, 'dragenter');\n  _off(items, 'drop');\n};\n/*\n * Remove event handlers from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableEvents = function(sortable) {\n  _off(sortable, 'dragover');\n  _off(sortable, 'dragenter');\n  _off(sortable, 'drop');\n};\n/*\n * Attach ghost to dataTransfer object\n * @param {Event} original event\n * @param {object} ghost-object with item, x and y coordinates\n */\nvar _attachGhost = function(event, ghost) {\n  // this needs to be set for HTML5 drag & drop to work\n  event.dataTransfer.effectAllowed = 'move';\n  event.dataTransfer.setData('text', '');\n\n  // check if setDragImage method is available\n  if (event.dataTransfer.setDragImage) {\n    event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y);\n  }\n};\n/**\n * _addGhostPos clones the dragged item and adds it as a Ghost item\n * @param {Event} event - the event fired when dragstart is triggered\n * @param {object} ghost - .draggedItem = Element\n */\nvar _addGhostPos = function(event, ghost) {\n  if (!ghost.x) {\n    ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left);\n  }\n  if (!ghost.y) {\n    ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top);\n  }\n  return ghost;\n};\n/**\n * _getGhost constructs ghost and attaches it to dataTransfer\n * @param {Event} event - the original drag event object\n * @param {Element} draggedItem - the item that the user drags\n */\n// TODO: could draggedItem be replaced by event.target in all instances\nvar _getGhost = function(event, draggedItem) {\n  // add ghost item & draggedItem to ghost object\n  var ghost = {\n    draggedItem: draggedItem\n  };\n  // attach ghost position\n  ghost = _addGhostPos(event, ghost);\n  // attach ghost to dataTransfer\n  _attachGhost(event, ghost);\n};\n/*\n * Remove data from sortable\n * @param {Element} sortable a single sortable\n */\nvar _removeSortableData = function(sortable) {\n  _removeData(sortable);\n  _removeAttr(sortable, 'aria-dropeffect');\n};\n/*\n * Remove data from items\n * @param {Array|Element} items\n */\nvar _removeItemData = function(items) {\n  _removeAttr(items, 'aria-grabbed');\n  _removeAttr(items, 'draggable');\n  _removeAttr(items, 'role');\n};\n/*\n * Check if two lists are connected\n * @param {Element} curList\n * @param {Element} destList\n */\nvar _listsConnected = function(curList, destList) {\n  if (curList === destList) {\n    return true;\n  }\n  if (_data(curList, 'connectWith') !== undefined) {\n    return _data(curList, 'connectWith') === _data(destList, 'connectWith');\n  }\n  return false;\n};\nvar _getHandles = function(items, handle) {\n  var result = [];\n  var handles;\n  if (!handle) {\n    return items;\n  }\n  for (var i = 0; i < items.length; ++i) {\n    handles = items[i].querySelectorAll(handle);\n    result = result.concat(Array.prototype.slice.call(handles));\n  }\n  return result;\n};\n/*\n * Destroy the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _destroySortable = function(sortableElement) {\n  var opts = _data(sortableElement, 'opts') || {};\n  var items = _filter(sortableElement.children, opts.items);\n  var handles = _getHandles(items, opts.handle);\n  // remove event handlers & data from sortable\n  _removeSortableEvents(sortableElement);\n  _removeSortableData(sortableElement);\n  // remove event handlers & data from items\n  _off(handles, 'mousedown');\n  _removeItemEvents(items);\n  _removeItemData(items);\n};\n/*\n * Enable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _enableSortable = function(sortableElement) {\n  var opts = _data(sortableElement, 'opts');\n  var items = _filter(sortableElement.children, opts.items);\n  var handles = _getHandles(items, opts.handle);\n  _attr(sortableElement, 'aria-dropeffect', 'move');\n  _attr(handles, 'draggable', 'true');\n  // IE FIX for ghost\n  // can be disabled as it has the side effect that other events\n  // (e.g. click) will be ignored\n  var spanEl = (document || window.document).createElement('span');\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\n    _on(handles, 'mousedown', function() {\n      if (items.indexOf(this) !== -1) {\n        this.dragDrop();\n      } else {\n        var parent = this.parentElement;\n        while (opts.items.indexOf(parent) === -1) {\n          parent = parent.parentElement;\n        }\n        parent.dragDrop();\n      }\n    });\n  }\n};\n/*\n * Disable the sortable\n * @param {Element} sortableElement a single sortable\n */\nvar _disableSortable = function(sortableElement) {\n  var opts = _data(sortableElement, 'opts');\n  var items = _filter(sortableElement.children, opts.items);\n  var handles = _getHandles(items, opts.handle);\n  _attr(sortableElement, 'aria-dropeffect', 'none');\n  _attr(handles, 'draggable', 'false');\n  _off(handles, 'mousedown');\n};\n/*\n * Add the index of each item in the array to it as a data-property\n * @param {Array} items\n * @description items need to be index for reporting on update\n */\nvar _setIndex = function(items){\n    items.forEach(function(item, index){\n        _data(item, 'sortable-index', index);\n    });\n};\n/*\n * Reload the sortable\n * @param {Element} sortableElement a single sortable\n * @description events need to be removed to not be double bound\n */\nvar _reloadSortable = function(sortableElement) {\n  var opts = _data(sortableElement, 'opts');\n  var items = _filter(sortableElement.children, opts.items);\n  var handles = _getHandles(items, opts.handle);\n  // add index to items\n  _setIndex(items);\n  // remove event handlers from items\n  _removeItemEvents(items);\n  _off(handles, 'mousedown');\n  // remove event handlers from sortable\n  _removeSortableEvents(sortableElement);\n};\n/**\n * Get position of the element relatively to its sibling elements\n * @param {Element} element\n * @returns {number}\n */\nvar _index = function(element) {\n  if (!element.parentElement) {\n    return 0;\n  }\n  return Array.prototype.indexOf.call(element.parentElement.children, element);\n};\n/**\n * Whether element is in DOM\n * @param {Element} element\n * @returns {boolean}\n */\nvar _attached = function(element) {\n  return !!element.parentNode;\n};\n/**\n * Convert HTML string into DOM element\n * @param {Element|string} html\n * @returns {Element}\n */\nvar _html2element = function(html) {\n  if (typeof html !== 'string') {\n    return html;\n  }\n  var div = document.createElement('div');\n  div.innerHTML\t= html;\n  return div.firstChild;\n};\n/**\n * Insert before target\n * @param {Element} target\n * @param {Element} element\n */\nvar _before = function(target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target\n  );\n};\n/**\n * Insert after target\n * @param {Element} target\n * @param {Element} element\n */\nvar _after = function(target, element) {\n  target.parentElement.insertBefore(\n    element,\n    target.nextElementSibling\n  );\n};\n/**\n * Detach element from DOM\n * @param {Element} element\n */\nvar _detach = function(element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n};\n/**\n * Make native event that can be dispatched afterwards\n * @param {string} name\n * @param {object} detail\n * @returns {CustomEvent}\n */\nvar _makeEvent = function(name, detail) {\n  var e = document.createEvent('Event');\n  if (detail) {\n    e.detail = detail;\n  }\n  e.initEvent(name, false, true);\n  return e;\n};\n/**\n * @param {Element} sortableElement\n * @param {CustomEvent} event\n */\nvar _dispatchEventOnConnected = function(sortableElement, event) {\n  sortables.forEach(function(target) {\n    if (_listsConnected(sortableElement, target)) {\n      target.dispatchEvent(event);\n    }\n  });\n};\n/*\n * Public sortable object\n * @param {Array|NodeList} sortableElements\n * @param {object|string} options|method\n */\nvar sortable = function(sortableElements, options) {\n\n  var method = String(options);\n\n  options = (function(options) {\n    var result = {\n      connectWith: false,\n      placeholder: null,\n      // dragImage can be null or a Element\n      dragImage: null,\n      disableIEFix: false,\n      placeholderClass: 'sortable-placeholder',\n      draggingClass: 'sortable-dragging',\n      hoverClass: false\n    };\n    for (var option in options) {\n      result[option] = options[option];\n    }\n    return result;\n  })(options);\n\n  if (typeof sortableElements === 'string') {\n    sortableElements = document.querySelectorAll(sortableElements);\n  }\n\n  if (sortableElements instanceof window.Element) {\n    sortableElements = [sortableElements];\n  }\n\n  sortableElements = Array.prototype.slice.call(sortableElements);\n\n  /* TODO: maxstatements should be 25, fix and remove line below */\n  /*jshint maxstatements:false */\n  sortableElements.forEach(function(sortableElement) {\n\n    if (/enable|disable|destroy/.test(method)) {\n      sortable[method](sortableElement);\n      return;\n    }\n\n    // get options & set options on sortable\n    options = _data(sortableElement, 'opts') || options;\n    _data(sortableElement, 'opts', options);\n    // reset sortable\n    _reloadSortable(sortableElement);\n    // initialize\n    var items = _filter(sortableElement.children, options.items);\n    var index;\n    var startParent;\n    var placeholder = options.placeholder;\n    if (!placeholder) {\n      placeholder = document.createElement(\n        /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\n      );\n    }\n    placeholder = _html2element(placeholder);\n    placeholder.classList.add.apply(\n      placeholder.classList,\n      options.placeholderClass.split(' ')\n    );\n\n    // setup sortable ids\n    if (!sortableElement.getAttribute('data-sortable-id')) {\n      var id = sortables.length;\n      sortables[id] = sortableElement;\n      _attr(sortableElement, 'data-sortable-id', id);\n      _attr(items, 'data-item-sortable-id', id);\n    }\n\n    _data(sortableElement, 'items', options.items);\n    placeholders.push(placeholder);\n    if (options.connectWith) {\n      _data(sortableElement, 'connectWith', options.connectWith);\n    }\n\n    _enableSortable(sortableElement);\n    _attr(items, 'role', 'option');\n    _attr(items, 'aria-grabbed', 'false');\n\n    // Mouse over class\n    if (options.hoverClass) {\n      var hoverClass = 'sortable-over';\n      if (typeof options.hoverClass === 'string') {\n        hoverClass = options.hoverClass;\n      }\n\n      _on(items, 'mouseenter', function() {\n        this.classList.add(hoverClass);\n      });\n\n      _on(items, 'mouseleave', function() {\n        this.classList.remove(hoverClass);\n      });\n    }\n\n    // Handle drag events on draggable items\n    _on(items, 'dragstart', function(e) {\n      e.stopImmediatePropagation();\n\n      if (options.dragImage) {\n        _attachGhost(e, {\n          draggedItem: options.dragImage,\n          x: 0,\n          y: 0\n        });\n        console.log('WARNING: dragImage option is deprecated' +\n        ' and will be removed in the future!');\n      } else {\n        // add transparent clone or other ghost to cursor\n        _getGhost(e, this);\n      }\n      // cache selsection & add attr for dragging\n      this.classList.add(options.draggingClass);\n      dragging = this;\n      _attr(dragging, 'aria-grabbed', 'true');\n      // grab values\n      index = _index(dragging);\n      draggingHeight = parseInt(window.getComputedStyle(dragging).height);\n      draggingWidth = parseInt(window.getComputedStyle(dragging).width);\n      startParent = this.parentElement;\n      // dispatch sortstart event on each element in group\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\n        item: dragging,\n        placeholder: placeholder,\n        startparent: startParent\n      }));\n    });\n    // Handle drag events on draggable items\n    _on(items, 'dragend', function() {\n      var newParent;\n      if (!dragging) {\n        return;\n      }\n      // remove dragging attributes and show item\n      dragging.classList.remove(options.draggingClass);\n      _attr(dragging, 'aria-grabbed', 'false');\n      dragging.style.display = dragging.oldDisplay;\n      delete dragging.oldDisplay;\n\n      placeholders.forEach(_detach);\n      newParent = this.parentElement;\n\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\n        item: dragging,\n        startparent: startParent\n      }));\n\n      if (index !== _index(dragging) || startParent !== newParent) {\n        var startParentItems = _filter(startParent.children, _data(startParent, 'items'));\n        var endParentItems = _filter(newParent.children, _data(newParent, 'items'));\n\n        _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\n          draggedItem: {\n              item: dragging,\n              index: _filter(newParent.children, _data(newParent, 'items'))\n                .indexOf(dragging),\n              oldIndex: _data(dragging, 'sortable-index'),\n              get position(){\n                  return this.index + 1;\n              },\n              get oldPosition(){\n                  return this.oldIndex + 1;\n              },\n          },\n          startParent: {\n              item: startParent,\n              items: startParentItems.map(function(item, currentIndex){\n                  return {\n                      item: item,\n                      index: currentIndex,\n                      oldIndex: _data(item, 'sortable-index'),\n                      get hasChanged(){\n                          return this.oldIndex !== this.index;\n                      },\n                      get position(){\n                          return this.index + 1;\n                      },\n                  };\n              })\n          },\n          endParent: {\n              item: newParent,\n              items: endParentItems.map(function(item, currentIndex){\n                  return {\n                      item: item,\n                      index: currentIndex,\n                      oldIndex: _data(item, 'sortable-index'),\n                      get hasChanged(){\n                          return this.oldIndex !== this.index;\n                      },\n                      get position(){\n                          return this.index + 1;\n                      },\n                  };\n              })\n          }\n        }));\n        // update items check after the primary check for hasChanged are correct\n        _setIndex(endParentItems);\n        _setIndex(startParentItems);\n      }\n      dragging = null;\n      draggingHeight = null;\n      draggingWidth = null;\n      });\n    // Handle drop event on sortable & placeholder\n    // TODO: REMOVE placeholder?????\n    _on([sortableElement, placeholder], 'drop', function(e) {\n      var visiblePlaceholder;\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n      visiblePlaceholder = placeholders.filter(_attached)[0];\n      _after(visiblePlaceholder, dragging);\n      dragging.dispatchEvent(_makeEvent('dragend'));\n    });\n\n    // Handle dragover and dragenter events on draggable items\n    var onDragOverEnter = function(e) {\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n      e.dataTransfer.dropEffect = 'move';\n      if (items.indexOf(this) !== -1) {\n        var thisHeight = parseInt(window.getComputedStyle(this).height);\n        var placeholderIndex = _index(placeholder);\n        var thisIndex = _index(this);\n        if (options.forcePlaceholderSize) {\n            placeholder.style.height = draggingHeight + 'px';\n            placeholder.style.width = draggingWidth + 'px';\n        }\n\n        // Check if `this` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\n        if (thisHeight > draggingHeight) {\n          // Dead zone?\n          var deadZone = thisHeight - draggingHeight;\n          var offsetTop = _offset(this).top;\n          if (placeholderIndex < thisIndex &&\n              e.pageY < offsetTop + deadZone) {\n            return;\n          }\n          if (placeholderIndex > thisIndex &&\n              e.pageY > offsetTop + thisHeight - deadZone) {\n            return;\n          }\n        }\n\n        if (dragging.oldDisplay === undefined) {\n          dragging.oldDisplay = dragging.style.display;\n        }\n        dragging.style.display = 'none';\n        if (placeholderIndex < thisIndex) {\n          _after(this, placeholder);\n        } else {\n          _before(this, placeholder);\n        }\n        // Intentionally violated chaining, it is more complex otherwise\n        placeholders\n          .filter(function(element) {return element !== placeholder;})\n          .forEach(_detach);\n      } else {\n        if (placeholders.indexOf(this) === -1 &&\n            !_filter(this.children, options.items).length) {\n          placeholders.forEach(_detach);\n          this.appendChild(placeholder);\n        }\n      }\n    };\n    _on(items.concat(sortableElement), 'dragover', onDragOverEnter);\n    _on(items.concat(sortableElement), 'dragenter', onDragOverEnter);\n  });\n\n  return sortableElements;\n};\n\nsortable.destroy = function(sortableElement) {\n  _destroySortable(sortableElement);\n};\n\nsortable.enable = function(sortableElement) {\n  _enableSortable(sortableElement);\n};\n\nsortable.disable = function(sortableElement) {\n  _disableSortable(sortableElement);\n};\n\nreturn sortable;\n}));\n"],"sourceRoot":"/source/"}